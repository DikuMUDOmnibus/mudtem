#define CON_DEFAULT_CHOICE		10 
#define CON_GEN_GROUPS			11 

	write_to_buffer(d,"Quieres hacer customize?\n\r",0);
	write_to_buffer(d,"Toma mas tiempo crear el personaje , pero te permite un mayor\n\r",0);
	write_to_buffer(d,"rango de habilidades.\n\r",0);
	write_to_buffer(d,"#B#FADVERTENCIA#b#f : Haz customize SOLO si has jugado MUD antes.\n\r",0);
	write_to_buffer(d,"              Si te equivocas en  las preguntas puedes\n\r",0);
	write_to_buffer(d,"              crear (por ejemplo) un mago que no tenga\n\r",0);
	write_to_buffer(d,"              spells o que subas de nivel cada 30000xp.\n\r",0);
	write_to_buffer(d,"              Si no conoces el sistema de skills/spells\n\r",0);
	write_to_buffer(d,"              del #BROM#b, responde #B#FN#b#f.\n\r",0);
	write_to_buffer(d,"Customize (S/N)? ",0);
	d->connected = CON_DEFAULT_CHOICE;
	break;

case CON_DEFAULT_CHOICE:
	write_to_buffer(d,"\n\r",2);
        switch ( argument[0] )
        {
        case 's': case 'S': 
	    ch->gen_data = new_gen_data();
	    ch->gen_data->points_chosen = ch->pcdata->points;
	    do_help(ch,"group header");
	    list_group_costs(ch);
	    write_to_buffer(d,"Ya tienes los siguientes skills:\n\r",0);
	    do_skills(ch,"");
	    do_help(ch,"menu choice");
	    d->connected = CON_GEN_GROUPS;
	    break;
        case 'n': case 'N': 
	    group_add(ch,class_table[ch->class].default_group,TRUE);
            write_to_buffer( d, "\n\r", 2 );
	    write_to_buffer(d,
		"Por favor elige un arma de las siguientes opciones:\n\r",0);
	    buf[0] = '\0';
	    for ( i = 0; weapon_table[i].name != NULL; i++)
		if (ch->pcdata->learned[*weapon_table[i].gsn] > 0)
		{
		    strcat(buf,weapon_table[i].name);
		    strcat(buf," ");
		}
	    strcat(buf,"\n\rTu opcion? ");
	    write_to_buffer(d,buf,0);
            d->connected = CON_PICK_WEAPON;
            break;
        default:
            write_to_buffer( d, "Por favor responde (S/N)? ", 0 );
            return;
        }
	break;

////
    case CON_GEN_GROUPS:
	send_to_char("\n\r",ch);
       	if (!str_cmp(argument,"done"))
       	{
	    sprintf(buf,"Puntos de creacion: %d\n\r",ch->pcdata->points);
	    send_to_char(buf,ch);
	    sprintf(buf,"Experiencia por nivel: %d\n\r",
	            exp_per_level(ch,ch->gen_data->points_chosen));
	    if (ch->pcdata->points < 40)
		ch->train = (40 - ch->pcdata->points + 1) / 2;
	    free_gen_data(ch->gen_data);
	    ch->gen_data = NULL;
	    send_to_char(buf,ch);
            write_to_buffer( d, "\n\r", 2 );
            write_to_buffer(d,
                "Por favor elige un arma de las siguientes opciones:\n\r",0);
            buf[0] = '\0';
            for ( i = 0; weapon_table[i].name != NULL; i++)
                if (ch->pcdata->learned[*weapon_table[i].gsn] > 0)
                {
                    strcat(buf,weapon_table[i].name);
		    strcat(buf," ");
                }
            strcat(buf,"\n\rTu opcion? ");
            write_to_buffer(d,buf,0);
            d->connected = CON_PICK_WEAPON;
            break;
        }

        if (!parse_gen_groups(ch,argument))
        send_to_char(
        "Opciones son: list,learned,premise,add,drop,info,help, y done.\n\r"
        ,ch);

        do_help(ch,"menu choice");
        break;

