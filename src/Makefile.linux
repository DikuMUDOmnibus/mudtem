
CC      = gcc
PROF    = 
NOCRYPT =
#WARNING = -Wall -Wstrict-prototypes -Wcast-qual -Wcast-align -Wshadow
WARNING = -Wall -Wstrict-prototypes -Wcast-align
I_FLAGS = -I./include -I../slang/src
C_FLAGS =  $(PROF) $(NOCRYPT) $(WARNING) -O -ggdb3 $(I_FLAGS) -DMUD_SLANG -DUSAR_MACROS
L_FLAGS =  $(PROF) -lslang -lm -ggdb3 -lcrypt

O_FILES = act_comm.o act_enter.o act_info.o act_move.o act_obj.o act_wiz.o \
	  alias.o ban.o clan.o comm.o const.o db.o db2.o effects.o fight.o flags.o \
	  handler.o healer.o interp.o note.o lookup.o magic.o magic2.o \
	  mob_cmds.o mob_prog.o music.o puntaje.o quest.o remort.o recycle.o \
	  save.o scan.o skills.o special.o tables.o update.o dice.o \
	  wizutil.o economy.o language.o hunt.o trap.o poker.o \
	  olc.o olc_act.o olc_save.o string.o mem.o bit.o pedit.o \
	  skedit.o sedit.o raedit.o cmdedit.o hedit.o events.o plist.o \
	  mazegen.o gedit.o eval.o script.o smart.o arena.o \
	  screen.o readconf.o entity.o random.o tablesave.o \
	  slang.o

rom: $(O_FILES)
	rm -f rom
	$(CC) -o rom $(O_FILES) $(L_FLAGS)
	@ls -al rom
	@size rom

install:
	mv rom ../bin

install.new:
	mv rom ../bin/rom.new

resolve:
	$(CC) -ggdb -Wall -I./include -o resolve resolve.c
	@mv resolve ../bin

clean:
	rm -f *.o
	rm -f rom
	rm -f *~

tar:
	make clean
	tar cvfz src.tar.gz *

.c.o: merc.h
	$(CC) -c $(C_FLAGS) $<
